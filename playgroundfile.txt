import UIKit

var greeting = "Hello, playground"


struct Person { // storing and passing around data
    var firstName: String
    var lastName: String
}

let me = Person(firstName: "Alexa", lastName: "Hugenberg")

class Human{ // interactive, stuff stored to memory --- reference types
    var firstName: String
    var lastName: String
    
    init(){ // have to initialize variables in classes
        firstName = ""
        lastName = ""
    }
    
}


typealias Coordinate = (x: Int, y: Int)
var coordinate: Coordinate = (x: 0,y: 20)

//var coordinates = (x: 0,y: 20) //tuple

coordinate.0
coordinate.1

coordinate.x
coordinate.y

print(coordinate)

enum cardinalDirection: String {
    case north, east, south, west
    
    var discription: String{
        rawValue
    }
    
    //var axis: String {
       // switch direction {
        //case .north, .south:
            //print("vertical")
        //case .east, .west:
            //print("horizontal")
        //}
    //}
}

var direction = cardinalDirection.north
//direction.axis
direction.discription


struct Coord {
    var x: Int
    var y: Int
    
    var description: String{
        "\(x),\(y)"
    }
    
    static var zero : Coord { //type method
        return Coord (x: 0, y: 0)
    }
}

var start = Coord(x: 0, y: 20)


start.x = 10
start.description

Coord.zero

var list: Array<Int> = [1,3,5,7]

for (item, _) in list.enumerated(){
    print ("On item \(item)")
}

//var list1: [Int] = [2,4,6,8]
var list2 = [Int]()
list2.append(0)
list2.append(1)

//var dictionary = Dictionary<Int,String>()
var dictionary = [Int:String]() // not orderd

dictionary[3] = "Three"

//func doStuff1() -> Void{}
func math(number: Int) -> Int{
    return number
}

math(number: 6)

func math2(_ number2: Int, _ other: Int) -> Int{
    return number2 + other
}

math2(12, 15)

func math3(_ number2: Int, _ other: Int = 5) -> Int{ //can add default number (5)
    return number2 + other
}

math3(12) // computes to 17


var nickName: String? //value of nickName is nil

nickName = "Lou" // actual value is Optional("Lou"), need to unrap it to get value out of optional

func sayHi(nickName: String){
   // guard let nickName = nickName else {
        //print("no name found")
       // return
    //}
    print("Hi \(nickName)")
}

if let nickName = nickName{
    print("about to execute")
    sayHi(nickName: nickName)
}


let customName: String
if let name = nickName {
    customName = name
} else{
    customName = "Friend"
}

//let customName = nickName ?? "Friend"

//let customName = nickName != nil ? nickName! : "Friend"
